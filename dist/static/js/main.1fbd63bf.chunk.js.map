{"version":3,"sources":["compos/signin.js","actions/authaction.js","compos/signout.js","compos/navbar.js","compos/prosum.js","compos/prolist.js","compos/dash.js","compos/info.js","compos/login.js","compos/create.js","compos/procreate.js","actions/blogactions.js","App.js","serviceWorker.js","redux/authreducer.js","redux/blogreducer.js","redux/rootreducer.js","fb/fbconfig.js","index.js"],"names":["compose","connect","state","users","firered","profile","dispatch","signout","getState","getFirebase","auth","signOut","then","type","firestoreConnect","props","initials","className","to","href","onClick","check","isEmpty","sum","ps","title","firname","laname","moment","createdAt","toDate","calendar","ProList","pros","map","pro","id","key","Dash","this","projects","React","Component","firestore","ordered","blogs","indprops","match","params","data","blog","content","login","email","password","handlertwo","e","setState","target","value","handlerone","preventDefault","signinusingeandp","authError","action","onSubmit","htmlFor","name","onChange","credis","creds","signInWithEmailAndPassword","catch","err","siup","newUser","getFirestore","firebase","createUserWithEmailAndPassword","res","collection","doc","user","uid","set","signUp","createablog","history","push","console","log","add","authorId","Date","resp","createblog","App","exact","path","component","Eachdet","Login","Create","Blogg","Boolean","window","location","hostname","normstate","authReducer","blogReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseconfig","rffProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1fbd63bf.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {signOut} from '../actions/authaction'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nconst signin = (props)=>{\r\n    const {initials}=props.users\r\n    return(\r\n    <ul className=\"right\">\r\n        <li><NavLink to='/addblog'>New Project</NavLink></li>\r\n        <li><a href=\"#\"onClick={props.signout}>Log Out</a></li>\r\n        <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{initials}</NavLink></li>\r\n    </ul>\r\n)}\r\nconst mapStateToProps=(state)=>{\r\n    //console.log(state.firered.profile)\r\n    return{users:state.firered.profile}\r\n}\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    signout:()=>dispatch(signOut())\r\n})\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps),firestoreConnect(()=>['users']))(signin)","export const signIn =(creds)=>{\r\n    return((dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            creds.email,\r\n            creds.password\r\n        ).then(()=>{\r\n            dispatch({type:'loginsuccess'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'error',err})\r\n        })\r\n    })\r\n}\r\nexport const signOut = ()=>{\r\n    return(dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase()\r\n        firebase.auth().signOut().then(()=>dispatch({type:'SIGN_OUT'}))\r\n    }\r\n}\r\nexport const signUp =(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase=getFirebase()\r\n        const firestore=getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(res=>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firname:newUser.firname,\r\n                laname:newUser.laname,\r\n                initials:newUser.firname[0]+newUser.laname[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SINGUPSUCCED'})\r\n        }).catch(err=>{\r\n            dispatch({type:'ERRINSIUP',err})\r\n        })}\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst signout = ()=>(\r\n    <ul className=\"right\">\r\n        <li><NavLink to='/create'>SignUp</NavLink></li>\r\n        <li><NavLink to='/login'>Login</NavLink></li>\r\n    </ul>\r\n)\r\nexport default signout","import React from 'react'\r\nimport Signin from './signin'\r\nimport Signout from './signout'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nconst navbar = (props)=>{\r\n    const check=props.auth.isEmpty\r\n    return(\r\n    <div>\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/'>Plan</Link>\r\n                {!check?<Signin/>:<Signout/>}\r\n            </div>\r\n        </nav>\r\n    </div>\r\n)\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    const {auth}=state.firered\r\n    return{\r\n        auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(navbar);","import React from 'react'\r\nimport moment from 'moment'\r\nconst sum =({ps})=>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{ps.title}</span>\r\n                <p>Posted by {ps.firname} {ps.laname}</p>\r\n                <p className='grey-text'>{moment(ps.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n)\r\n}\r\nexport default sum;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Summary from './prosum'\r\nconst ProList = ({pros})=>{\r\n    return(\r\n        <div className='pro-list section'>\r\n            {pros && pros.map(pro=>(\r\n                <Link to={'/pro/'+ pro.id}>\r\n                <Summary ps={pro} key={pro.id} />\r\n                </Link>))}\r\n        </div>\r\n    )\r\n}\r\nexport default ProList\r\n","import React from 'react'\r\nimport ProList from './prolist'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nclass Dash extends React.Component{\r\n    render(){\r\n        const {projects,auth}=this.props\r\n        if(auth.isEmpty)return <Redirect to='/login'/>\r\n        return(\r\n            <div className=\"dash container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProList pros={projects}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return({\r\n    projects:state.firestore.ordered.blogs,\r\n    auth:state.firered.auth\r\n})}\r\n\r\nexport default compose(connect(mapStateToProps),firestoreConnect(()=>['blogs']))(Dash);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport moment from 'moment'\r\nimport {compose} from 'redux'\r\nconst info = (props) => {\r\n    const {blog,auth}=props\r\n    if(auth.isEmpty) return <Redirect to='/login'/>\r\n    if(blog){\r\n        return (\r\n            <div className='container section prodet'>\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{blog.title}</span>\r\n                        <p>{blog.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <p>Posted by {blog.firname} {blog.laname}</p>\r\n                        <p>Posted  {moment(blog.createdAt.toDate()).calendar()}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <p>waste shit</p>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps=(state,indprops)=>{\r\n    const id= indprops.match.params.id\r\n    const blogs =state.firestore.data.blogs\r\n    const blog= blogs?blogs[id]:null\r\n    return{\r\n        blog:blog,\r\n        auth:state.firered.auth\r\n    }    \r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps),firestoreConnect(()=>['blogs']))(info)\r\n","import React, { Component } from 'react'\r\nimport {signIn} from '../actions/authaction'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nclass login extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',  \r\n    }\r\n    handlertwo=e=>{\r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n    handlerone=e=>{\r\n        e.preventDefault();\r\n        this.props.signinusingeandp(this.state)\r\n    }\r\n    render() {\r\n        const {authError,auth}=this.props\r\n        if(!auth.isEmpty) return <Redirect to='/'/>\r\n        return (\r\n            <div className='container white'>\r\n                <form action=\"white\" onSubmit={this.handlerone}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handlertwo}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handlertwo}/> \r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError?<p>ErrorPleaseCheck</p>:null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    authError:state.auth.authError,\r\n    auth:state.firered.auth\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    signinusingeandp:credis=>dispatch(signIn(credis))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(login)\r\n","import React, { Component } from 'react'\r\nimport {signUp} from '../actions/authaction'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass login extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firname:'',\r\n        laname:''  \r\n    }\r\n    handlertwo=e=>{\r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n    handlerone=e=>{\r\n        e.preventDefault();\r\n        this.props.siup(this.state)\r\n    }\r\n    render() {\r\n        const{auth}=this.props\r\n        if(!auth.isEmpty) return <Redirect to='/'/>\r\n        return (\r\n            <div className='container white'>\r\n                <form action=\"white\" onSubmit={this.handlerone}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handlertwo}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handlertwo}/> \r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firname\">Firstname</label>\r\n                        <input type=\"text\" name=\"firname\" id=\"firname\" onChange={this.handlertwo}/> \r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor='laname'>Lastname</label>\r\n                        <input type='text' name=\"laname\" id=\"laname\" onChange={this.handlertwo}/> \r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth:state.firered.auth\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        siup:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(login)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createblog} from '../actions/blogactions'\r\nimport {Redirect} from 'react-router-dom'\r\nclass login extends Component {\r\n    state={\r\n        title:'',\r\n        content:'',  \r\n    }\r\n    handlertwo=e=>{\r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n    handlerone=e=>{\r\n        e.preventDefault();\r\n        this.props.createablog(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <form className=\"white\" onSubmit={this.handlerone}>\r\n                    <h5 className=\"grey-text text-darken-3\">Add Blog</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" name=\"title\" id=\"title\" onChange={this.handlertwo}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Blog</label>\r\n                        <textarea name=\"content\" id=\"content\"  className=\"materialize-textarea\" onChange={this.handlertwo}></textarea> \r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Add Blog!!</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    createablog:(blog)=>dispatch(createblog(blog))\r\n})\r\nexport default connect(null,mapDispatchToProps)(login);","export const createblog=(blog)=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firestore = getFirebase().firestore();\r\n        const profile =getState().firered.profile;\r\n        const firered = getState().firered.auth.uid;\r\n        console.log(firered)\r\n        firestore.collection('blogs').add({\r\n            ...blog,\r\n            firname:profile.firname,\r\n            laname:profile.laname,\r\n            authorId:firered,\r\n            createdAt:new Date()\r\n        }).then((resp)=>{\r\n            dispatch({type:'ADD_BLOG',blog})}).catch((err)=>{\r\n            dispatch({type:'ADD_BLOG_ERR',err})\r\n        })\r\n    }\r\n}","import React from 'react';\nimport Navbar from './compos/navbar'\nimport {Switch,Route} from 'react-router-dom'\nimport Dash from './compos/dash'\nimport './App.css';\nimport ProList from './compos/prolist';\nimport Eachdet from './compos/info'\nimport Login from './compos/login'\nimport Create from './compos/create'\nimport Blogg from './compos/procreate'\n\nclass App extends React.Component{\n  render(){\n    return (\n     <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dash} />\n          <Route exact path='/dash' component={ProList} /> \n          <Route exact path='/pro/:id' component={Eachdet}/>\n          <Route exact path='/login' component={Login}/>\n          <Route exact path='/create' component={Create}/>\n          <Route exact path ='/addblog' component={Blogg}/>\n        </Switch>\n      </div>\n  )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const normstate ={\r\n    authError:null\r\n}\r\nconst authReducer = (state=normstate,action)=>{\r\n    switch(action.type){\r\n        case 'error':\r\n            return {\r\n                ...state,\r\n                authError:'loginFailed'\r\n            }\r\n        \r\n        case 'loginsuccess':\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SINGUPSUCCED':\r\n            console.log('succes')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'ERRINSIUP':\r\n            console.log('error')\r\n            return{\r\n                ...state,\r\n                authError:'signupfailed'\r\n            }\r\n        case 'SIGN_OUT':\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer","const normstate ={\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n}\r\nconst blogReducer = (state=normstate,action)=>{\r\n    switch(action.type){\r\n        case 'ADD_BLOG':\r\n            console.log('projectadded',action.blog)\r\n            return state\r\n        case 'ADD_BLOG_ERR':\r\n            console.log('error',action.err)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default blogReducer","import {combineReducers} from 'redux'\r\nimport authReducer from './authreducer'\r\nimport blogReducer from './blogreducer'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nexport default combineReducers({\r\n    auth:authReducer,\r\n    blog:blogReducer,\r\n    firestore:firestoreReducer,\r\n    firered:firebaseReducer\r\n})","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDKpq2l2oLLKJ7HYn-1ySepsUVAPvmt6TM\",\r\n    authDomain: \"redux-and-async.firebaseapp.com\",\r\n    databaseURL: \"https://redux-and-async.firebaseio.com\",\r\n    projectId: \"redux-and-async\",\r\n    storageBucket: \"redux-and-async.appspot.com\",\r\n    messagingSenderId: \"473450141906\",\r\n    appId: \"1:473450141906:web:e6e1c57630f1a4af64350b\",\r\n    measurementId: \"G-N5V9SR5ZJ9\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './redux/rootreducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createFirestoreInstance,reduxFirestore,getFirestore} from 'redux-firestore'\nimport {ReactReduxFirebaseProvider,getFirebase} from 'react-redux-firebase'\nimport firebase from 'firebase/app'\nimport firebaseconfig from './fb/fbconfig'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n    reduxFirestore(firebase,firebaseconfig)\n  )\n)\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rffProps = {\n  firebase, \n  config:firebaseconfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n}\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rffProps}>\n      <Router>\n        <App />\n      </Router>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}